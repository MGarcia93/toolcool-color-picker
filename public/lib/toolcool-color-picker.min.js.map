{
  "version": 3,
  "sources": ["../../node_modules/tinycolor2/tinycolor.js", "../../src/app/color-picker.ts", "../../src/domain/events-provider.ts", "../../src/domain/color-provider.ts", "../../src/ui/saturation/saturation.ts", "../../src/ui/hue/hue.ts", "../../src/ui/alpha/alpha.ts", "../../src/ui/fields/fields.ts", "../../src/domain/common-provider.ts", "../../src/ui/popup/popup.ts", "../../src/index.ts"],
  "sourcesContent": ["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n", "// @ts-ignore: esbuild custom loader\nimport styles from './styles.pcss';\nimport tinycolor from 'tinycolor2';\nimport ColorPickerPopup from '../ui/popup/popup';\nimport {\n    CUSTOM_EVENT_COLOR_HSV_CHANGED,\n    CUSTOM_EVENT_COLOR_HUE_CHANGED,\n    CUSTOM_EVENT_COLOR_ALPHA_CHANGED,\n} from '../domain/events-provider';\nimport { getUniqueId } from '../domain/common-provider';\nimport { getRgbaBackground, parseColor } from '../domain/color-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker color=\"#ff0000\"></toolcool-color-picker>\n */\ninterface IColorPickerState {\n    isPopupVisible: boolean,\n    initialColor: tinycolor.Instance,\n    color: tinycolor.Instance,\n}\n\nclass ColorPicker extends HTMLElement {\n\n    // ----------- APIs ------------------------\n    public get value() {\n        return getRgbaBackground(this.state.color)\n    }\n\n    public set value(updateColor: string) {\n        this.state.color = tinycolor(updateColor);\n    }\n\n    public get opened() {\n        return this.state.isPopupVisible;\n    }\n\n    public set opened(isOpened: boolean) {\n        this.state.isPopupVisible = isOpened;\n    }\n\n    // -----------------------------------------\n\n    // this id attribute is used for custom events\n    public readonly cid: string;\n\n    private $button: HTMLElement;\n    private $buttonColor: HTMLElement;\n    private $popupBox: HTMLElement;\n\n    private stateDefaults: IColorPickerState = {\n        isPopupVisible: false,\n        initialColor: tinycolor('#000'),\n        color: tinycolor('#000'),\n    };\n    private state: IColorPickerState;\n\n    constructor() {\n        super();\n\n        this.cid = getUniqueId();\n\n        // register web components\n        if(!customElements.get('toolcool-color-picker-popup')){\n            customElements.define('toolcool-color-picker-popup', ColorPickerPopup);\n        }\n\n        this.attachShadow({\n            mode: 'open', // 'closed', 'open',\n        });\n\n        this.toggle = this.toggle.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.clickedOutside = this.clickedOutside.bind(this);\n\n        this.colorHsvChangedCustomEvent = this.colorHsvChangedCustomEvent.bind(this);\n        this.colorHueChangedCustomEvent = this.colorHueChangedCustomEvent.bind(this);\n        this.colorAlphaChangedCustomEvent = this.colorAlphaChangedCustomEvent.bind(this);\n\n        this.initState();\n    }\n\n    initState() {\n        // eslint-disable-next-line\n        const scope = this;\n        this.state = new Proxy(scope.stateDefaults, {\n\n            // eslint-disable-next-line\n            set(target: IColorPickerState, key: string | symbol, value: any, receiver: any): boolean {\n                target[key] = value;\n\n                if(key === 'isPopupVisible'){\n                    scope.onPopupVisibilityChange();\n                }\n\n                if(key === 'initialColor'){\n                    scope.onInitialColorChange();\n                }\n\n                if(key === 'color'){\n                    scope.onColorChange();\n                }\n\n                return true;\n            },\n        });\n    }\n\n    onPopupVisibilityChange() {\n        if(!this.$popupBox) return true;\n        this.$popupBox.innerHTML = this.state.isPopupVisible ?\n            `<toolcool-color-picker-popup color=\"${ this.state.color.toRgbString() }\" cid=\"${ this.cid }\" />` :\n            '';\n    }\n\n    onInitialColorChange() {\n        const bgColor = getRgbaBackground(this.state.color);\n\n        if(this.$buttonColor){\n            this.$buttonColor.style.backgroundColor = bgColor;\n        }\n\n        const $popup = this.shadowRoot.querySelector('toolcool-color-picker-popup');\n        if($popup){\n            $popup.setAttribute('color', bgColor);\n        }\n    }\n\n    onColorChange() {\n        const bgColor = getRgbaBackground(this.state.color);\n\n        if(this.$buttonColor){\n            this.$buttonColor.style.backgroundColor = getRgbaBackground(this.state.color);\n        }\n\n        this.dispatchEvent(new CustomEvent('change', {\n            detail: {\n                value: bgColor,\n            }\n        }));\n    }\n\n    colorHsvChangedCustomEvent(evt: CustomEvent) {\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        this.state.color = tinycolor.fromRatio({\n            h: evt.detail.h,\n            s: evt.detail.s,\n            v: evt.detail.v,\n            a: this.state.color.toHsv().a,\n        });\n    }\n\n    colorHueChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        const hsv = this.state.color.toHsv();\n\n        this.state.color = tinycolor.fromRatio({\n            h: evt.detail.h,\n            s: hsv.s,\n            v: hsv.v,\n            a: hsv.a,\n        });\n    }\n\n    colorAlphaChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        const rgba = this.state.color.toRgb();\n        rgba.a = evt.detail.a;\n\n        this.state.color = tinycolor(rgba);\n    }\n\n    clickedOutside() {\n        this.state.isPopupVisible = false;\n    }\n\n    toggle() {\n        const isVisible = this.state.isPopupVisible;\n\n        // setTimeout is used instead stopPropagation\n        // to close other popup instances\n        window.setTimeout(() => {\n            this.state.isPopupVisible = !isVisible;\n        }, 0);\n    }\n\n    onKeyDown(evt: KeyboardEvent) {\n        if(evt.key === 'Escape') {\n\n            // close the popup\n            this.state.isPopupVisible = false;\n        }\n    }\n\n    /**\n     * when the custom element connected to DOM\n     */\n    connectedCallback() {\n\n        this.state.initialColor = parseColor(this.getAttribute('color'));\n        this.state.color = parseColor(this.getAttribute('color'));\n\n        this.shadowRoot.innerHTML = `\n            <style>${ styles }</style>\n            <div class=\"color-picker\">\n                <button\n                    type=\"button\"\n                    tabIndex=\"0\"\n                    class=\"color-picker__button\"\n                    title=\"Select Color\">\n                    <span class=\"color-picker__button-color\" style=\"background: ${ getRgbaBackground(this.state.color) }\"></span>\n                </button>\n                <div data-popup-box></div>\n            </div>\n        `;\n\n        // init button and its events\n        this.$button = this.shadowRoot.querySelector('.color-picker__button');\n        this.$buttonColor = this.shadowRoot.querySelector('.color-picker__button-color');\n\n        this.$button.addEventListener('click', this.toggle);\n        this.$button.addEventListener('keydown', this.onKeyDown);\n\n        // init popup container\n        this.$popupBox = this.shadowRoot.querySelector('[data-popup-box]');\n\n        // close popup when clicked outside\n        document.addEventListener('click', this.clickedOutside);\n\n        // custom event from other parts of the app\n        document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n        document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.colorAlphaChangedCustomEvent);\n    }\n\n    /**\n     * when the custom element disconnected from DOM\n     */\n    disconnectedCallback(){\n        this.$button.removeEventListener('click', this.toggle);\n        this.$button.removeEventListener('keydown', this.onKeyDown);\n        document.removeEventListener('click', this.clickedOutside);\n\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n        document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.colorAlphaChangedCustomEvent);\n    }\n\n    /**\n     * when attributes change\n     */\n    attributeChangedCallback(){\n        this.state.initialColor = parseColor(this.getAttribute('color'));\n        this.state.color = parseColor(this.getAttribute('color'));\n        this.onInitialColorChange();\n    }\n}\n\nexport default ColorPicker;", "export const CUSTOM_EVENT_COLOR_HSV_CHANGED = 'toolcool-color-hsv-changed';\nexport const CUSTOM_EVENT_COLOR_HUE_CHANGED = 'toolcool-color-hue-changed';\nexport const CUSTOM_EVENT_COLOR_ALPHA_CHANGED = 'toolcool-color-alpha-changed';\n\nexport const sendAlphaCustomEvent = (cid: string, a: number) => {\n\n    if(!cid) return;\n\n    document.dispatchEvent(new CustomEvent(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, {\n        detail: {\n            a,\n            cid,\n        }\n    }));\n};\n\nexport const sendHsvCustomEvent = (cid: string, h: number, s: number, v: number) => {\n    if(!cid) return;\n\n    document.dispatchEvent(new CustomEvent(CUSTOM_EVENT_COLOR_HSV_CHANGED, {\n        detail: {\n            h,\n            s,\n            v,\n            cid,\n        }\n    }));\n};\n\nexport const sendHueCustomEvent = (cid: string, h: number) => {\n\n    if(!cid) return;\n\n    document.dispatchEvent(new CustomEvent(CUSTOM_EVENT_COLOR_HUE_CHANGED, {\n        detail: {\n            h,\n            cid,\n        }\n    }));\n};\n\n", "import tinycolor, { Instance } from 'tinycolor2';\n\nexport const SATURATION_STEP = 0.01;\n\n/**\n * This hue background is used in saturation component.\n * The hsl color is supported in 99.5% browsers - https://caniuse.com/?search=hsl\n * @param {number} hue - [0, 360]\n */\nexport const getHueBackground = (hue: number) => {\n    if(hue < 0){\n        hue = 0;\n    }\n    if(hue > 360){\n        hue = 360;\n    }\n    return `hsl(${ Math.round(hue) }, 100%, 50%)`;\n};\n\n/**\n * This alpha color background is used in the alpha component.\n * The hsl color is supported in 99.5% browsers - https://caniuse.com/?search=rgba\n */\nexport const getAlphaColorBackground = (color: Instance) => {\n    const rgba = color.toRgb();\n    return `linear-gradient(to right, rgba(${ rgba.r },${ rgba.g },${ rgba.b }, 0) 0%, rgba(${ rgba.r },${ rgba.g },${ rgba.b }, 1) 100%)`;\n};\n\nexport const getRgbaBackground = (color: Instance) => {\n    const rgba = color.toRgb();\n    return `rgba(${ rgba.r }, ${ rgba.g }, ${ rgba.b }, ${ rgba.a })`;\n};\n\n/**\n * Saturation: get top position in % by value from hsv.\n * @param {number} value - [0, 1]\n */\nexport const getTopByValue = (value: number) => {\n    if(value < 0){\n        value = 0;\n    }\n    if(value > 1){\n        value = 1;\n    }\n    const top = -(value * 100) + 100;\n    return `${ top.toFixed(2) }%`;\n};\n\n/**\n * Saturation: get left position in % by saturation from hsv.\n * @param {number} saturation - [0, 1]\n */\nexport const getLeftBySaturation = (saturation: number) => {\n    if(saturation < 0){\n        saturation = 0;\n    }\n    if(saturation > 1){\n        saturation = 1;\n    }\n\n    const top = saturation * 100;\n    return `${ top.toFixed(2) }%`;\n};\n\n/**\n * Hue: get left position in % by hue from hsv.\n * @param {number} hue - [0, 360]\n */\nexport const getLeftByHue = (hue) => {\n    if(hue < 0){\n        hue = 0;\n    }\n\n    if(hue > 360){\n        hue = 360;\n    }\n    const left = (hue * 100) / 360;\n    let rounded = Math.round( left * 1e2 ) / 1e2; // round to 2 decimal places\n\n    if(rounded < 0){\n        rounded = 0;\n    }\n\n    if(rounded > 100){\n        rounded = 100;\n    }\n\n    return rounded;\n};\n\n/**\n * Ig given left position in % ---> return the relevant hue.\n */\nexport const getHueByLeft = (left: number) => {\n    return (360 * left) / 100;\n};\n\n/**\n * returns a number in the range [0, 255]\n */\nexport const fixRGB = (updatedValue: string|number) => {\n    let value = Number(updatedValue) || 0;\n    value = Math.round(value);\n    value = Math.max(0, value);\n    value = Math.min(255, value);\n    return value;\n};\n\n/**\n * returns a number in the range [0, 100]\n */\nexport const fixPercent = (updatedValue: string|number) => {\n    let value = Number(updatedValue) || 100;\n    value = Math.round(value);\n    value = Math.max(0, value);\n    value = Math.min(100, value);\n    return value;\n};\n\nexport const parseColor = (colorString: string) => {\n    const color = tinycolor(colorString || '#000');\n    color.setAlpha(color.getAlpha());\n    return color;\n};\n", "// @ts-ignore: esbuild custom loader\nimport styles from './saturation.pcss';\nimport { CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, sendHsvCustomEvent } from '../../domain/events-provider';\nimport {\n    getHueBackground,\n    getLeftBySaturation,\n    getTopByValue,\n    parseColor,\n    SATURATION_STEP\n} from '../../domain/color-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-saturation color=\"#000\" cid=\"...\"></toolcool-color-picker-saturation>\n */\nclass ColorPickerSaturation extends HTMLElement {\n\n    // this id attribute is used for custom events\n    private cid: string;\n\n    private $saturation: HTMLElement;\n    private $color: HTMLElement;\n    private $pointer: HTMLElement;\n\n    private hue = 0; // [0, 360]\n    private saturation = 0; // [0, 1]\n    private value = 0; // [0, 1]\n\n    constructor() {\n        super();\n\n        this.attachShadow({\n            mode: 'open', // 'closed', 'open',\n        });\n\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onPointerKeyDown = this.onPointerKeyDown.bind(this);\n\n        this.colorHsvChangedCustomEvent = this.colorHsvChangedCustomEvent.bind(this);\n        this.colorHueChangedCustomEvent = this.colorHueChangedCustomEvent.bind(this);\n    }\n\n    performUpdate(sendEvent = true) {\n\n        // re-render\n        this.$pointer.style.left = getLeftBySaturation(this.saturation);\n        this.$pointer.style.top = getTopByValue(this.value);\n        this.$color.setAttribute('style', `background: ${ getHueBackground(this.hue) }`);\n\n        if(sendEvent) {\n            // update outer color to change the button, and\n            // send the updated color to the user\n            sendHsvCustomEvent(this.cid, this.hue, this.saturation, this.value);\n        }\n    }\n\n    // we need to handle both MouseEvent and TouchEvent --->\n    // eslint-disable-next-line\n    onChange(evt: any) {\n        if(!this.$saturation) return;\n\n        const { width: boxWidth, height: boxHeight, left: boxLeft, top: boxTop } = this.$saturation.getBoundingClientRect();\n        if(boxWidth === 0 || boxHeight === 0) return;\n\n        const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\n        const mouseY = typeof evt.clientY === 'number' ? evt.clientY : evt.touches[0].clientY;\n\n        const lPos = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n        const tPos = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\n\n        this.saturation = lPos / boxWidth;\n        this.value = 1 - (tPos / boxHeight);\n\n        this.performUpdate();\n    }\n\n    onPointerKeyDown(evt: KeyboardEvent) {\n\n        switch (evt.key){\n            case 'ArrowLeft': {\n                this.saturation = Math.max(0, this.saturation - SATURATION_STEP);\n                this.performUpdate();\n                break;\n            }\n\n            case 'ArrowRight': {\n                this.saturation = Math.min(1, this.saturation + SATURATION_STEP);\n                this.performUpdate();\n                break;\n            }\n\n            case 'ArrowUp': {\n                this.value = Math.min(1, this.value + SATURATION_STEP);\n                this.performUpdate();\n                break;\n            }\n\n            case 'ArrowDown': {\n                evt.preventDefault();\n                this.value = Math.max(0, this.value - SATURATION_STEP);\n                this.performUpdate();\n                break;\n            }\n        }\n    }\n\n    onMouseDown(evt: MouseEvent) {\n        if(evt.preventDefault){\n            evt.preventDefault();\n        }\n\n        this.onChange(evt);\n\n        window.addEventListener('mousemove', this.onChange);\n        window.addEventListener('mouseup', this.onMouseUp);\n\n        window.setTimeout(() => {\n            this.$pointer.focus();\n        }, 0);\n    }\n\n    onMouseUp() {\n        window.removeEventListener('mousemove', this.onChange);\n        window.removeEventListener('mouseup', this.onChange);\n    }\n\n    colorHsvChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        let changed = false;\n\n        if(this.hue !== evt.detail.h){\n            this.hue = evt.detail.h;\n            changed = true;\n        }\n\n        if(this.saturation !== evt.detail.s){\n            this.saturation = evt.detail.s;\n            changed = true;\n        }\n\n        if(this.value !== evt.detail.v){\n            this.value = evt.detail.v;\n            changed = true;\n        }\n\n        if(changed){\n            this.performUpdate(false);\n        }\n    }\n\n    colorHueChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        this.hue = evt.detail.h;\n\n        this.performUpdate();\n    }\n\n    /**\n     * when the custom element connected to DOM\n     */\n    connectedCallback(){\n\n        this.cid = this.getAttribute('cid');\n\n        const color = parseColor(this.getAttribute('color'));\n        const hsv = color.toHsv();\n\n        this.hue = hsv.h;\n        this.saturation = hsv.s;\n        this.value = hsv.v;\n\n        const top = getTopByValue(this.value);\n        const left = getLeftBySaturation(this.saturation);\n\n        this.shadowRoot.innerHTML = `\n           <style>${ styles }</style>\n           <div class=\"color-picker__saturation\">\n                <div class=\"color-picker__saturation-box\" style=\"background: ${ getHueBackground(this.hue) }\">\n                    <div class=\"color-picker__saturation-white\">\n                        <div class=\"color-picker__saturation-black\"></div>\n                        \n                        <div class=\"color-picker__saturation-pointer\" tabindex=\"0\" style=\"top: ${ top }; left: ${ left };\">\n                            <div class=\"color-picker__saturation-pointer-handler\"></div>\n                        </div>\n                    </div>\n                </div>\n           </div>\n        `;\n\n        this.$saturation = this.shadowRoot.querySelector('.color-picker__saturation');\n        this.$color = this.shadowRoot.querySelector('.color-picker__saturation-box');\n        this.$pointer = this.shadowRoot.querySelector('.color-picker__saturation-pointer');\n\n        this.$pointer.addEventListener('keydown', this.onPointerKeyDown);\n        this.$saturation.addEventListener('mousedown', this.onMouseDown);\n        this.$saturation.addEventListener('mouseup', this.onMouseUp);\n        this.$saturation.addEventListener('touchmove', this.onChange);\n        this.$saturation.addEventListener('touchstart', this.onChange);\n\n        document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n    }\n\n    /**\n     * when the custom element disconnected from DOM\n     */\n    disconnectedCallback(){\n        this.$saturation.removeEventListener('mousedown', this.onMouseDown);\n        this.$saturation.removeEventListener('mouseup', this.onMouseUp);\n        this.$saturation.removeEventListener('touchmove', this.onChange);\n        this.$saturation.removeEventListener('touchstart', this.onChange);\n        this.$pointer.removeEventListener('keydown', this.onPointerKeyDown);\n\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n    }\n\n    /**\n     * when attributes change\n     */\n    attributeChangedCallback(){\n\n        const color = parseColor(this.getAttribute('color'));\n        const hsv = color.toHsv();\n\n        this.hue = hsv.h;\n        this.saturation = hsv.s;\n        this.value = hsv.v;\n\n        this.performUpdate();\n    }\n}\n\nexport default ColorPickerSaturation;", "// @ts-ignore: esbuild custom loader\nimport styles from './hue.pcss';\nimport { CUSTOM_EVENT_COLOR_HSV_CHANGED, sendHueCustomEvent } from '../../domain/events-provider';\nimport { getHueByLeft, getLeftByHue, parseColor } from '../../domain/color-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-hue color=\"#000\" cid=\"...\"></toolcool-color-picker-hue>\n */\nclass ColorPickerHue extends HTMLElement {\n\n    // this id attribute is used for custom events\n    private cid: string;\n\n    private $hue: HTMLElement;\n    private $pointer: HTMLElement;\n\n    private hue = 0; // [0, 360]\n\n    constructor() {\n        super();\n\n        this.attachShadow({\n            mode: 'open', // 'closed', 'open',\n        });\n\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n\n        this.colorHsvChangedCustomEvent = this.colorHsvChangedCustomEvent.bind(this);\n    }\n\n    performUpdate() {\n        this.$pointer.style.left = `${ getLeftByHue(this.hue) }%`;\n\n        // update outer color to change the button, and\n        // send the updated color to the user\n        sendHueCustomEvent(this.cid, this.hue);\n    }\n\n    colorHsvChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        if(this.hue !== evt.detail.h){\n            this.hue = evt.detail.h;\n            this.performUpdate();\n        }\n    }\n\n    // we need to handle both MouseEvent and TouchEvent --->\n    // eslint-disable-next-line\n    onChange(evt: any) {\n        if(!this.$hue) return;\n\n        const { width: boxWidth, left: boxLeft } = this.$hue.getBoundingClientRect();\n        if(boxWidth === 0) return;\n\n        const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\n\n        const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n        const percent = Math.min(Math.max(0, Math.round((left * 100) / boxWidth)), 100);\n\n        this.hue = getHueByLeft(percent);\n        this.performUpdate();\n    }\n\n    onKeyDown(evt: KeyboardEvent) {\n\n        this.$pointer.focus();\n\n        switch (evt.key){\n            case 'ArrowLeft': {\n                let percent = getLeftByHue(this.hue);\n                percent = Math.max(0, percent - 1);\n                this.hue = getHueByLeft(percent);\n                this.performUpdate();\n                break;\n            }\n\n            case 'ArrowRight': {\n                let percent = getLeftByHue(this.hue);\n                percent = Math.min(100, percent + 1);\n                this.hue = getHueByLeft(percent);\n                this.performUpdate();\n                break;\n            }\n        }\n    }\n\n    onMouseDown(evt: MouseEvent) {\n        if(evt.preventDefault){\n            evt.preventDefault();\n        }\n\n        this.onChange(evt);\n\n        window.addEventListener('mousemove', this.onChange);\n        window.addEventListener('mouseup', this.onMouseUp);\n\n        window.setTimeout(() => {\n            this.$pointer.focus();\n        }, 0);\n    }\n\n    onMouseUp() {\n        window.removeEventListener('mousemove', this.onChange);\n        window.removeEventListener('mouseup', this.onChange);\n    }\n\n    /**\n     * when the custom element connected to DOM\n     */\n    connectedCallback(){\n\n        this.cid = this.getAttribute('cid');\n\n        const color = parseColor(this.getAttribute('color'));\n        this.hue = color.toHsv().h;\n\n        this.shadowRoot.innerHTML = `\n           <style>${ styles }</style>\n           <div class=\"color-picker__hue\">\n                <div class=\"color-picker__hue-box\">\n                    <div class=\"color-picker__hue-v\">\n                        <div class=\"color-picker__hue-h\"></div>\n                    </div>\n                    \n                    <div class=\"color-picker__hue-pointer\">\n                        <div class=\"color-picker__hue-pointer-box\" tabindex=\"0\" style=\"left: ${ getLeftByHue(this.hue) }%\">\n                            <div class=\"color-picker__hue-pointer-handler\"></div>\n                        </div>\n                    </div>\n                </div>\n           </div>\n        `;\n\n        this.$hue = this.shadowRoot.querySelector('.color-picker__hue');\n        this.$pointer = this.shadowRoot.querySelector('.color-picker__hue-pointer-box');\n\n        this.$hue.addEventListener('mousedown', this.onMouseDown);\n        this.$hue.addEventListener('mouseup', this.onMouseUp);\n        this.$hue.addEventListener('touchmove', this.onChange);\n        this.$hue.addEventListener('touchstart', this.onChange);\n\n        this.$pointer.addEventListener('keydown', this.onKeyDown);\n        document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n    }\n\n    /**\n     * when the custom element disconnected from DOM\n     */\n    disconnectedCallback(){\n\n        this.$hue.removeEventListener('mousedown', this.onMouseDown);\n        this.$hue.removeEventListener('mouseup', this.onMouseUp);\n        this.$hue.removeEventListener('touchmove', this.onChange);\n        this.$hue.removeEventListener('touchstart', this.onChange);\n        this.$pointer.removeEventListener('keydown', this.onKeyDown);\n\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n    }\n\n    /**\n     * when attributes change\n     */\n    attributeChangedCallback(){\n\n        const color = parseColor(this.getAttribute('color'));\n        const hsv = color.toHsv();\n\n        this.hue = hsv.h;\n        this.performUpdate();\n    }\n}\n\nexport default ColorPickerHue;", "// @ts-ignore: esbuild custom loader\nimport styles from './alpha.pcss';\nimport {\n    CUSTOM_EVENT_COLOR_ALPHA_CHANGED,\n    CUSTOM_EVENT_COLOR_HSV_CHANGED,\n    CUSTOM_EVENT_COLOR_HUE_CHANGED,\n    sendAlphaCustomEvent\n} from '../../domain/events-provider';\nimport { fromRatio } from 'tinycolor2';\nimport { getAlphaColorBackground, parseColor } from '../../domain/color-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-alpha color=\"#000\" cid=\"...\"></toolcool-color-picker-alpha>\n */\nclass ColorPickerAlpha extends HTMLElement {\n\n    // this id attribute is used for custom events\n    private cid: string;\n\n    private $alpha: HTMLElement;\n    private $color: HTMLElement;\n    private $pointer: HTMLElement;\n\n    private alpha = 1; // [0, 1]\n    private hue = 0; // [0, 360]\n    private saturation = 0; // [0, 1]\n    private value = 0; // [0, 1]\n\n    constructor() {\n        super();\n\n        this.attachShadow({\n            mode: 'open', // 'closed', 'open',\n        });\n\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n\n        this.colorHsvChangedCustomEvent = this.colorHsvChangedCustomEvent.bind(this);\n        this.colorHueChangedCustomEvent = this.colorHueChangedCustomEvent.bind(this);\n        this.colorAlphaChangedCustomEvent = this.colorAlphaChangedCustomEvent.bind(this);\n    }\n\n    performUpdate() {\n        this.$pointer.style.left = `${ this.alpha * 100 }%`;\n        sendAlphaCustomEvent(this.cid, this.alpha);\n    }\n\n\n    // we need to handle both MouseEvent and TouchEvent --->\n    // eslint-disable-next-line\n    onChange(evt: any) {\n        if(!this.$alpha) return;\n\n        const { width: boxWidth, left: boxLeft } = this.$alpha.getBoundingClientRect();\n        if(boxWidth === 0) return;\n\n        const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\n\n        const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n        const percent = Math.min(Math.max(0, (left * 100) / boxWidth), 100);\n\n        this.alpha = percent / 100;\n        this.performUpdate();\n    }\n\n    onKeyDown(evt: KeyboardEvent) {\n\n        this.$pointer.focus();\n\n        switch (evt.key){\n            case 'ArrowLeft': {\n                let percent = this.alpha * 100;\n                percent = Math.max(0, percent - 1);\n                this.alpha = percent / 100;\n                this.performUpdate();\n                break;\n            }\n\n            case 'ArrowRight': {\n                let percent = this.alpha * 100;\n                percent = Math.min(100, percent + 1)\n                this.alpha = percent / 100;\n                this.performUpdate();\n                break;\n            }\n        }\n    }\n\n    colorHsvChangedCustomEvent(evt: CustomEvent) {\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        const color = fromRatio({\n            h: evt.detail.h,\n            s: evt.detail.s,\n            v: evt.detail.v,\n            a: this.alpha,\n        });\n\n        this.$color.style.background = getAlphaColorBackground(color);\n    }\n\n    colorHueChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        const color = fromRatio({\n            h: evt.detail.h,\n            s: this.saturation,\n            v: this.value,\n            a: this.alpha,\n        });\n\n        this.$color.style.background = getAlphaColorBackground(color);\n    }\n\n    colorAlphaChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        if(this.alpha !== evt.detail.a){\n            this.alpha = evt.detail.a;\n            this.performUpdate();\n        }\n    }\n\n    onMouseDown(evt: MouseEvent) {\n\n        if(evt.preventDefault){\n            evt.preventDefault();\n        }\n\n        this.onChange(evt);\n\n        window.addEventListener('mousemove', this.onChange);\n        window.addEventListener('mouseup', this.onMouseUp);\n\n        window.setTimeout(() => {\n            this.$pointer.focus();\n        }, 0);\n    }\n\n    onMouseUp() {\n        window.removeEventListener('mousemove', this.onChange);\n        window.removeEventListener('mouseup', this.onChange);\n    }\n\n    /**\n     * when the custom element connected to DOM\n     */\n    connectedCallback(){\n\n        this.cid = this.getAttribute('cid');\n\n        const color = parseColor(this.getAttribute('color'));\n        const hsv = color.toHsv();\n\n        this.alpha = hsv.a;\n        this.hue = hsv.h;\n        this.saturation = hsv.s;\n        this.value = hsv.v;\n\n        this.shadowRoot.innerHTML = `\n           <style>${ styles }</style>\n           <div class=\"color-picker__alpha\">\n                <div class=\"color-picker__alpha-box\">\n                    <div class=\"color-picker__alpha-transparent-bg\"></div>\n                    <div class=\"color-picker__alpha-color-bg\" style=\"background: ${ getAlphaColorBackground(color) }\"></div>\n                    \n                    <div class=\"color-picker__alpha-pointer\">\n                        <div class=\"color-picker__alpha-pointer-box\" tabindex=\"0\" style=\"left: ${ this.alpha * 100 }%;\" >\n                            <div class=\"color-picker__alpha-pointer-handler\"></div>\n                        </div>\n                    </div>\n                </div>\n           </div>\n        `;\n\n        this.$alpha = this.shadowRoot.querySelector('.color-picker__alpha');\n        this.$color = this.shadowRoot.querySelector('.color-picker__alpha-color-bg');\n        this.$pointer = this.shadowRoot.querySelector('.color-picker__alpha-pointer-box');\n\n        this.$alpha.addEventListener('mousedown', this.onMouseDown);\n        this.$alpha.addEventListener('mouseup', this.onMouseUp);\n        this.$alpha.addEventListener('touchmove', this.onChange);\n        this.$alpha.addEventListener('touchstart', this.onChange);\n        this.$pointer.addEventListener('keydown', this.onKeyDown);\n\n        document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n        document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.colorAlphaChangedCustomEvent);\n    }\n\n    /**\n     * when the custom element disconnected from DOM\n     */\n    disconnectedCallback(){\n        this.$alpha.removeEventListener('mousedown', this.onMouseDown);\n        this.$alpha.removeEventListener('mouseup', this.onMouseUp);\n        this.$alpha.removeEventListener('touchmove', this.onChange);\n        this.$alpha.removeEventListener('touchstart', this.onChange);\n        this.$pointer.removeEventListener('keydown', this.onKeyDown);\n\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n        document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.colorAlphaChangedCustomEvent);\n    }\n\n    /**\n     * when attributes change\n     */\n    attributeChangedCallback(){\n\n        const color = parseColor(this.getAttribute('color'));\n        const hsv = color.toHsv();\n\n        this.alpha = hsv.a;\n        this.hue = hsv.h;\n        this.saturation = hsv.s;\n        this.value = hsv.v;\n\n        this.performUpdate();\n    }\n}\n\nexport default ColorPickerAlpha;", "// @ts-ignore: esbuild custom loader\nimport styles from './fields.pcss';\nimport {\n    CUSTOM_EVENT_COLOR_ALPHA_CHANGED,\n    CUSTOM_EVENT_COLOR_HSV_CHANGED,\n    CUSTOM_EVENT_COLOR_HUE_CHANGED,\n    sendAlphaCustomEvent, sendHsvCustomEvent\n} from '../../domain/events-provider';\nimport tinycolor from 'tinycolor2';\nimport { fixPercent, fixRGB, parseColor } from '../../domain/color-provider';\nimport { getUniqueId } from '../../domain/common-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-fields color=\"#000\" cid=\"...\"></toolcool-color-picker-fields>\n */\nclass ColorPickerFields extends HTMLElement {\n\n    // this id attribute is used for custom events\n    private cid: string;\n    private color: tinycolor.Instance = tinycolor('#000');\n\n    private $fields: HTMLElement;\n    private $hex: HTMLInputElement;\n    private $r: HTMLInputElement;\n    private $g: HTMLInputElement;\n    private $b: HTMLInputElement;\n    private $a: HTMLInputElement;\n\n    private hex = '';\n    private r = 0;\n    private g = 0;\n    private b = 0;\n    private a = 1;\n\n    constructor() {\n        super();\n\n        this.attachShadow({\n            mode: 'open', // 'closed', 'open',\n        });\n\n        this.colorHsvChangedCustomEvent = this.colorHsvChangedCustomEvent.bind(this);\n        this.colorHueChangedCustomEvent = this.colorHueChangedCustomEvent.bind(this);\n        this.colorAlphaChangedCustomEvent = this.colorAlphaChangedCustomEvent.bind(this);\n\n        this.onHexChange = this.onHexChange.bind(this);\n        this.performUpdate = this.performUpdate.bind(this);\n        this.onRedChange = this.onRedChange.bind(this);\n        this.onGreenChange = this.onGreenChange.bind(this);\n        this.onBlueChange = this.onBlueChange.bind(this);\n        this.onAlphaChange = this.onAlphaChange.bind(this);\n        this.onRedKeyDown = this.onRedKeyDown.bind(this);\n        this.onBlueKeyDown = this.onBlueKeyDown.bind(this);\n        this.onGreenKeyDown = this.onGreenKeyDown.bind(this);\n        this.onAlphaKeyDown = this.onAlphaKeyDown.bind(this);\n    }\n\n    colorHueChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        const hsv = this.color.toHsv();\n\n        this.color = tinycolor.fromRatio({\n            h: evt.detail.h,\n            s: hsv.s,\n            v: hsv.v,\n            a: hsv.a,\n        });\n        this.performUpdate();\n    }\n\n    colorAlphaChangedCustomEvent(evt: CustomEvent) {\n\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        const rgba = this.color.toRgb();\n        rgba.a = evt.detail.a;\n\n        this.color = tinycolor(rgba);\n        this.performUpdate();\n    }\n\n    colorHsvChangedCustomEvent(evt: CustomEvent) {\n        if(!evt || !evt.detail || !evt.detail.cid) return;\n\n        // handle only current instance\n        if(evt.detail.cid !== this.cid) return;\n\n        this.color = tinycolor.fromRatio({\n            h: evt.detail.h,\n            s: evt.detail.s,\n            v: evt.detail.v,\n            a: this.color.toHsv().a,\n        });\n\n        this.performUpdate();\n    }\n\n    performUpdate() {\n        const rgba = this.color.toRgb();\n        this.r = rgba.r;\n        this.g = rgba.g;\n        this.b = rgba.b;\n        this.a = rgba.a;\n        this.hex = this.color.toHex();\n\n        if(this.shadowRoot.activeElement !== this.$hex){\n            this.$hex.value = this.hex.toUpperCase();\n        }\n\n        if(this.shadowRoot.activeElement !== this.$r){\n            this.$r.value = this.r.toString();\n        }\n\n        if(this.shadowRoot.activeElement !== this.$g){\n            this.$g.value = this.g.toString();\n        }\n\n        if(this.shadowRoot.activeElement !== this.$b){\n            this.$b.value = this.b.toString();\n        }\n\n        if(this.shadowRoot.activeElement !== this.$a){\n            this.$a.value = Math.round(this.a * 100).toString();\n        }\n    }\n\n    onFieldKeyDown(evt: KeyboardEvent, type: string) {\n        const rgba = this.color.toRgb();\n\n        switch (evt.key){\n            case 'ArrowUp': {\n                if(type === 'r'){\n                    this.r = Math.min(255, rgba.r + 1);\n                    rgba.r = this.r;\n                    const hsv = tinycolor(rgba).toHsv();\n                    sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n                    this.$r.value = this.r.toString();\n                    this.performUpdate();\n                }\n                if(type === 'g'){\n                    this.g = Math.min(255, rgba.g + 1);\n                    rgba.g = this.g;\n\n                    const hsv = tinycolor(rgba).toHsv();\n                    sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n                    this.$g.value = this.g.toString();\n                    this.performUpdate();\n                }\n                if(type === 'b'){\n                    this.b = Math.min(255, rgba.b + 1);\n                    rgba.b = this.b\n                    const hsv = tinycolor(rgba).toHsv();\n                    sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n                    this.$b.value = this.b.toString();\n                    this.performUpdate();\n                }\n                if(type === 'a'){\n                    this.a = Math.min(100, this.a + 0.01);\n                    this.$a.value = Math.round(this.a * 100).toString();\n\n                    const rgba = this.color.toRgb();\n                    rgba.a = this.a;\n                    this.color = tinycolor(rgba);\n\n                    this.performUpdate();\n                    sendAlphaCustomEvent(this.cid, this.a);\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if(type === 'r'){\n                    this.r = Math.max(0, rgba.r - 1);\n                    rgba.r = this.r;\n                    const hsv = tinycolor(rgba).toHsv();\n                    sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n                    this.$r.value = this.r.toString();\n                    this.performUpdate();\n                }\n                if(type === 'g'){\n                    this.g = Math.max(0, rgba.g - 1);\n                    rgba.g = this.g;\n\n                    const hsv = tinycolor(rgba).toHsv();\n                    sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n                    this.$g.value = this.g.toString();\n                    this.performUpdate();\n                }\n                if(type === 'b'){\n                    this.b = Math.max(0, rgba.b - 1);\n                    rgba.b = this.b\n                    const hsv = tinycolor(rgba).toHsv();\n                    sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n                    this.$b.value = this.b.toString();\n                    this.performUpdate();\n                }\n                if(type === 'a'){\n                    this.a = Math.max(0, this.a - 0.01);\n                    this.$a.value = Math.round(this.a * 100).toString();\n\n                    const rgba = this.color.toRgb();\n                    rgba.a = this.a;\n                    this.color = tinycolor(rgba);\n\n                    this.performUpdate();\n                    sendAlphaCustomEvent(this.cid, this.a);\n                }\n                break;\n            }\n            case 'Escape': {\n                if(this.shadowRoot.activeElement){\n                    const $el = this.shadowRoot.activeElement as HTMLElement;\n                    $el.blur();\n                }\n\n                this.performUpdate();\n                break;\n            }\n            case 'Enter': {\n                if(this.shadowRoot.activeElement){\n                    const $el = this.shadowRoot.activeElement as HTMLElement;\n                    $el.blur();\n                }\n\n                this.performUpdate();\n                break;\n            }\n        }\n    }\n\n    onRedKeyDown(evt: KeyboardEvent) {\n        this.onFieldKeyDown(evt, 'r');\n    }\n\n    onGreenKeyDown(evt: KeyboardEvent) {\n        this.onFieldKeyDown(evt, 'g');\n    }\n\n    onBlueKeyDown(evt: KeyboardEvent) {\n        this.onFieldKeyDown(evt, 'b');\n    }\n\n    onAlphaKeyDown(evt: KeyboardEvent) {\n        this.onFieldKeyDown(evt, 'a');\n    }\n\n    onHexChange(evt: Event) {\n\n        const $target = evt.target as HTMLInputElement;\n        if($target.value.length !== 6) return;\n\n        const updatedColor = tinycolor(`#${ $target.value }`);\n\n        if(updatedColor.isValid()){\n            this.color = updatedColor;\n\n            const hsv = this.color.toHsv();\n\n            // update outer color to change the button, and\n            // send the updated color to the user\n            sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n        }\n    }\n\n    onRedChange(evt: Event) {\n        const $target = evt.target as HTMLInputElement;\n        const fixedValue = fixRGB($target.value);\n\n        if(fixedValue.toString() === $target.value){\n            const rgba = this.color.toRgb();\n            rgba.r = fixedValue;\n            const hsv = tinycolor(rgba).toHsv();\n\n            // update outer color to change the button, and\n            // send the updated color to the user\n            sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n        }\n    }\n\n    onGreenChange(evt: Event) {\n        const $target = evt.target as HTMLInputElement;\n        const fixedValue = fixRGB($target.value);\n\n        if(fixedValue.toString() === $target.value){\n            const rgba = this.color.toRgb();\n            rgba.g = fixedValue;\n            const hsv = tinycolor(rgba).toHsv();\n\n            // update outer color to change the button, and\n            // send the updated color to the user\n            sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n        }\n    }\n\n    onBlueChange(evt: Event) {\n        const $target = evt.target as HTMLInputElement;\n        const fixedValue = fixRGB($target.value);\n\n        if(fixedValue.toString() === $target.value){\n            const rgba = this.color.toRgb();\n            rgba.b = fixedValue;\n            const hsv = tinycolor(rgba).toHsv();\n\n            // update outer color to change the button, and\n            // send the updated color to the user\n            sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n        }\n    }\n\n    onAlphaChange(evt: Event) {\n        const $target = evt.target as HTMLInputElement;\n        const fixedValue = fixPercent($target.value);\n\n        if(fixedValue.toString() === $target.value){\n            sendAlphaCustomEvent(this.cid, fixedValue / 100);\n        }\n    }\n\n    /**\n     * when the custom element connected to DOM\n     */\n    connectedCallback(){\n\n        this.cid = this.getAttribute('cid');\n        this.color = parseColor(this.getAttribute('color'));\n\n        const rgba = this.color.toRgb();\n        this.r = rgba.r;\n        this.g = rgba.g;\n        this.b = rgba.b;\n        this.a = rgba.a;\n        this.hex = this.color.toHex();\n\n        const hexId = getUniqueId();\n        const rId = getUniqueId();\n        const gId = getUniqueId();\n        const bId = getUniqueId();\n        const aId = getUniqueId();\n\n        this.shadowRoot.innerHTML = `\n           <style>${ styles }</style>\n           <div class=\"color-picker__fields\">\n               <input id=\"hex-${ hexId }\" type=\"text\" value=\"${ this.hex.toUpperCase() }\" data-type=\"hex\" />\n               <input id=\"r-${ rId }\" type=\"text\" value=\"${ this.r }\" data-type=\"r\" />\n               <input id=\"g-${ gId }\" type=\"text\" value=\"${ this.g }\" data-type=\"g\" />\n               <input id=\"b-${ bId }\" type=\"text\" value=\"${ this.b }\" data-type=\"b\" />\n               <input id=\"a-${ aId }\" type=\"text\" value=\"${ Math.round(this.a * 100) }\" data-type=\"a\" />\n               \n               <label for=\"hex-${ hexId }\">Hex</label>\n               <label for=\"r-${ rId }\">R</label>\n               <label for=\"g-${ gId }\">G</label>\n               <label for=\"b-${ bId }\">B</label>\n               <label for=\"a-${ aId }\">A</label>\n           </div>\n        `;\n\n        this.$fields = this.shadowRoot.querySelector('.color-picker__fields');\n        this.$hex = this.shadowRoot.getElementById(`hex-${ hexId }`) as HTMLInputElement;\n        this.$r = this.shadowRoot.getElementById(`r-${ rId }`) as HTMLInputElement;\n        this.$g = this.shadowRoot.getElementById(`g-${ gId }`) as HTMLInputElement;\n        this.$b = this.shadowRoot.getElementById(`b-${ bId }`) as HTMLInputElement;\n        this.$a = this.shadowRoot.getElementById(`a-${ aId }`) as HTMLInputElement;\n\n        // custom event from other parts of the app\n        document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n        document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.colorAlphaChangedCustomEvent);\n\n        this.$hex.addEventListener('input', this.onHexChange);\n        this.$r.addEventListener('input', this.onRedChange);\n        this.$g.addEventListener('input', this.onGreenChange);\n        this.$b.addEventListener('input', this.onBlueChange);\n        this.$a.addEventListener('input', this.onAlphaChange);\n\n        this.$hex.addEventListener('blur', this.performUpdate);\n        this.$r.addEventListener('blur', this.performUpdate);\n        this.$g.addEventListener('blur', this.performUpdate);\n        this.$b.addEventListener('blur', this.performUpdate);\n        this.$a.addEventListener('blur', this.performUpdate);\n\n        this.$r.addEventListener('keydown', this.onRedKeyDown);\n        this.$g.addEventListener('keydown', this.onGreenKeyDown);\n        this.$b.addEventListener('keydown', this.onBlueKeyDown);\n        this.$a.addEventListener('keydown', this.onAlphaKeyDown);\n    }\n\n    /**\n     * when the custom element disconnected from DOM\n     */\n    disconnectedCallback(){\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.colorHsvChangedCustomEvent);\n        document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.colorHueChangedCustomEvent);\n        document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.colorAlphaChangedCustomEvent);\n\n        this.$hex.removeEventListener('input', this.onHexChange);\n        this.$r.removeEventListener('input', this.onRedChange);\n        this.$g.removeEventListener('input', this.onGreenChange);\n        this.$b.removeEventListener('input', this.onBlueChange);\n        this.$a.removeEventListener('input', this.onAlphaChange);\n\n        this.$hex.removeEventListener('blur', this.performUpdate);\n        this.$r.removeEventListener('blur', this.performUpdate);\n        this.$g.removeEventListener('blur', this.performUpdate);\n        this.$b.removeEventListener('blur', this.performUpdate);\n        this.$a.removeEventListener('blur', this.performUpdate);\n\n        this.$r.removeEventListener('keydown', this.onRedKeyDown);\n        this.$g.removeEventListener('keydown', this.onGreenKeyDown);\n        this.$b.removeEventListener('keydown', this.onBlueKeyDown);\n        this.$a.removeEventListener('keydown', this.onAlphaKeyDown);\n    }\n\n    /**\n     * when attributes change\n     */\n    attributeChangedCallback(){\n        this.color = parseColor(this.getAttribute('color'));\n        this.performUpdate();\n    }\n}\n\nexport default ColorPickerFields;", "\nexport const getUniqueId = () => {\n    return Math.random().toString(16).slice(2);\n};", "// @ts-ignore: esbuild custom loader\nimport styles from './popup.pcss';\nimport ColorPickerSaturation from '../saturation/saturation';\nimport ColorPickerHue from '../hue/hue';\nimport ColorPickerAlpha from '../alpha/alpha';\nimport ColorPickerFields from '../fields/fields';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-popup color=\"#000\" cid=\"...\"></toolcool-color-picker-popup>\n */\nclass ColorPickerPopup extends HTMLElement {\n\n    // this id attribute is used for custom events\n    private readonly cid: string;\n\n    private $popup: HTMLElement;\n    private color = '#000';\n\n    constructor() {\n        super();\n\n        // register web components\n        if(!customElements.get('toolcool-color-picker-saturation')){\n            customElements.define('toolcool-color-picker-saturation', ColorPickerSaturation);\n        }\n\n        if(!customElements.get('toolcool-color-picker-hue')){\n            customElements.define('toolcool-color-picker-hue', ColorPickerHue);\n        }\n\n        if(!customElements.get('toolcool-color-picker-alpha')){\n            customElements.define('toolcool-color-picker-alpha', ColorPickerAlpha);\n        }\n\n        if(!customElements.get('toolcool-color-picker-fields')){\n            customElements.define('toolcool-color-picker-fields', ColorPickerFields);\n        }\n\n        this.cid = this.getAttribute('cid');\n        this.prevent = this.prevent.bind(this);\n\n        this.attachShadow({\n            mode: 'open', // 'closed', 'open',\n        });\n    }\n\n    prevent(evt: MouseEvent) {\n        evt.preventDefault();\n        evt.stopPropagation();\n    }\n\n    /**\n     * when the custom element connected to DOM\n     */\n    connectedCallback(){\n        this.color = this.getAttribute('color') || '#000';\n\n        this.shadowRoot.innerHTML = `\n           <style>${ styles }</style>\n           <div class=\"color-picker__popup\">\n                <toolcool-color-picker-saturation color=\"${ this.color }\" cid=\"${ this.cid }\"></toolcool-color-picker-saturation>\n                <toolcool-color-picker-hue color=\"${ this.color }\" cid=\"${ this.cid }\"></toolcool-color-picker-hue>\n                <toolcool-color-picker-alpha color=\"${ this.color }\" cid=\"${ this.cid }\"></toolcool-color-picker-alpha>\n                <toolcool-color-picker-fields color=\"${ this.color }\" cid=\"${ this.cid }\"></toolcool-color-picker-fields>\n           </div>\n        `;\n\n        this.$popup = this.shadowRoot.querySelector('.color-picker__popup');\n        this.$popup.addEventListener('click', this.prevent);\n    }\n\n    /**\n     * when the custom element disconnected from DOM\n     */\n    disconnectedCallback(){\n        this.$popup.removeEventListener('click', this.prevent);\n    }\n\n    /**\n     * when attributes change\n     */\n    attributeChangedCallback(){\n        this.color = this.getAttribute('color') || '#000';\n\n        const $saturation = this.shadowRoot.querySelector('toolcool-color-picker-saturation');\n        const $hue = this.shadowRoot.querySelector('toolcool-color-picker-hue');\n        const $alpha = this.shadowRoot.querySelector('toolcool-color-picker-alpha');\n        const $fields = this.shadowRoot.querySelector('toolcool-color-picker-fields');\n\n        if($saturation){\n            $saturation.setAttribute('color',  this.color);\n        }\n\n        if($hue){\n            $hue.setAttribute('color',  this.color);\n        }\n\n        if($alpha){\n            $alpha.setAttribute('color',  this.color);\n        }\n\n        if($fields){\n            $fields.setAttribute('color',  this.color);\n        }\n    }\n}\n\nexport default ColorPickerPopup;", "import ColorPicker from './app/color-picker';\n\n// register web components\nif(!customElements.get('toolcool-color-picker')){\n    customElements.define('toolcool-color-picker', ColorPicker);\n}\n\n/*\n// TEST - TO REMOVE\nconst $colorPicker = document.querySelector('toolcool-color-picker') as ColorPicker;\n\n$colorPicker.addEventListener('change', (evt: CustomEvent) => {\n    console.log(evt.detail.value);\n});\n\n$colorPicker.value = 'red';\nconsole.log($colorPicker.value);\n\nexport {}*/"],
  "mappings": "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",
  "names": []
}
